{% assign external_file_path = include.path %}
{% capture external_content %}{% include_relative {{ external_file_path }} %}{% endcapture %}

{% if include.remove_frontmatter %}
  {% assign content_parts = external_content | split: "---" %}
  {% if content_parts.size > 2 %}
    {% assign external_content = content_parts[2] | strip %}
  {% endif %}
{% endif %}

{% assign repo_path = external_file_path | split: "/" | pop | join: "/" %}
<div class="external-content" data-repo-path="{{ repo_path }}">
{{ external_content | markdownify }}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const externalContent = document.querySelector('.external-content');
  if (externalContent) {
    const repoPath = externalContent.dataset.repoPath;
    const images = externalContent.querySelectorAll('img');
    
    images.forEach(img => {
      const src = img.getAttribute('src');
      if (src && src.startsWith('images/')) {
        img.setAttribute('src', `{{ site.baseurl }}/${repoPath}/${src}`);
      }
    });
  }
});
</script> 